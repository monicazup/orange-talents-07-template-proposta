#Configurando Banco de dados
spring.datasource.driverClassName=org.postgresql.Driver

# URL para rodar no docker
spring.datasource.url=${URL_BANCO:jdbc:postgresql://host.docker.internal:5433/propostas}
spring.datasource.username=${DATABASE_USER:postgres}
spring.datasource.password=${DATABASE_PASSWORD:123}

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=postgres

#SQL
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true

#Monitoramento
    #Actuator
management.endpoints.info.enabled=true
management.endpoint.health.show-details=always

    #Prometheus
management.endpoints.web.exposure.include=health,metrics,prometheus
management.security.enabled=false
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço-proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

    #Jaeger
#Nome do serviço
opentracing.jaeger.service-name=propostas
opentracing.spring.cloud.jdbc.enabled=false
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
#ENVIO DE TRACING, 100%
opentracing.jaeger.const-sampler.decision=${JAEGER_CONSTANTE:true}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_PROBABILISTICA:1}
#ENVIO DE TRACING POR SEGUNDO
opentracing.jaeger.rate-limiting-sampler.max-traces-per-second=${JAEGER_RATE_LIMIT:10}


## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/iamproposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/iamproposta/protocol/openid-connect/certs}	
token.criptografia=!SyL3bcFnxDnb3JtswGP&Vy*h3*25d-T!JcNL3*XHL88Q@SB&33!fgSz8@nBeXqwRh$+_Q


#SCHEDULE DOS FEIGN CLIENTS
periodicidade.verifica-restricao=10000
periodicidade.associa-cartao=10000